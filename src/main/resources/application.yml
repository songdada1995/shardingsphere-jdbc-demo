server:
  port: 9600

spring:
  application:
    name: shardingsphere-jdbc-demo


  # 分片数据源
  shardingsphere:
    datasource:
      names: primary
      primary:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/shardingsphere_jdbc_test?useUnicode=true&characterEncoding=utf8&useSSL=true&allowMultiQueries=true&autoReconnect=true
        username: root
        password: root
        max-active: 100
        min-idle: 10
        initial-size: 20
        max-wait: 10000
        validation-query: SELECT 1 FROM DUAL
        test-on-borrow: true
        test-while-idle: true
        time-between-eviction-runs-millis: 20000

    rules:
      sharding:
        tables:
          #账号表分片
          t_account:
            actual-data-nodes: primary.t_account_0$->{1..9},primary.t_account_$->{10..99}
            #分表策略
            table-strategy:
              #用于标准分片场景
              standard:
                sharding-column: site_id
            key-generate-strategy:
              column: id
              key-generator-name: SNOWFLAKE

          #订单表分片
          t_order:
            actual-data-nodes: primary.t_order_$->{2021..2031}0$->{1..9},primary.t_order_$->{2021..2031}1$->{0..2}
            table-strategy:
              #complex用于多分片键的复合分片场景
              complex:
                sharding-column: order_no,order_date #分片列名称，多个列以逗号分隔
        #绑定表规则列表
        binding-tables: t_account,t_order
        #未配置分片规则的表将通过默认数据源定位
        defaultDataSourceName: primary

    #是否开启SQL显示，默认值: false
    props:
      sql:
        show: true

  # 数据源配置
  datasource:
    retry-test:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/retry_test?useUnicode=true&characterEncoding=utf8&useSSL=true&allowMultiQueries=true&autoReconnect=true
      username: root
      password: root

      max-active: 100
      min-idle: 10
      initial-size: 20
      max-wait: 10000
      validation-query: SELECT 1
      test-on-borrow: true
      test-while-idle: true
      time-between-eviction-runs-millis: 20000


# thread pool
thread:
  pool:
    corePoolSize: 7
    maximumPoolSize: 8
    keepAliveTime: 100
    capacity: 50